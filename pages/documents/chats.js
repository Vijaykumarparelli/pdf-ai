import AiContainer from '@components/ai-container';
import Layout from '@components/laylout';
import Modals from '@components/modals';
import SearchBox from '@components/search-box';
import { getAllChatList, getChatList } from '@store/docs_chats.slice';
import styles from '@styles/documents.module.scss';
import ChatList from '@views/documents/chat-list';
import Head from 'next/head';
import { useEffect, useRef, useState } from 'react';
import { Spinner } from 'react-bootstrap';
import { FaTrashAlt } from 'react-icons/fa';
import { useDispatch, useSelector } from 'react-redux';
export default function Documents() {
  const { sectionLoader } = useSelector((state) => state.loading);
  const { chatList } = useSelector((state) => state.docs_chats);

  const modalRef = useRef();
  const dispatch = useDispatch();

  const [modalState, setModalState] = useState({
    target: 'DeleteAllChats',
  });
  useEffect(() => {
    dispatch(getAllChatList());
  }, []);
  const openModal = (target, data) => {
    setModalState((prev) => ({
      ...prev,
      target,
    }));
    modalRef.current.modalShow(data);
  };

  return (
    <>
      <Head>
        <title>chat with your pdf docs</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout headerClass="nav-bg" login_nav={true}>
        <div className={styles.container}>
          <AiContainer className="pt-4">
            <h1>Chat sessions</h1>
            <SearchBox btnText="Clear all" BtnIcon={FaTrashAlt} onClick={() => openModal('DeleteAllChats')} />

            <div className={`mt-3 ${styles.list_docs}`}>
              {sectionLoader && (
                <div className="text-center py-5">
                  <Spinner animation="grow" variant="ai-primary" />
                  <p>Loading...</p>
                </div>
              )}
              {!sectionLoader && chatList && (
                <>
                  {chatList.length === 0 ? (
                    <p>
                      <i>None</i>
                    </p>
                  ) : (
                    chatList.map((item, k) => <ChatList key={item.chat_id} item={item} k={k} openModal={openModal} />)
                  )}
                </>
              )}
            </div>
          </AiContainer>
        </div>
      </Layout>
      <Modals ref={modalRef} target={modalState.target} />
    </>
  );
}
